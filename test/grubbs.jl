using HypothesisTests, Test, Random


@testset "Grubbs' test" begin

x = [1.4512896591650737, -0.6014707661009177, -0.818159790068436, 0.05555342809452664, 0.7711431835662762, 0.13916040721483905, -0.014989821972555158, -1.2194502136192742, 1.617358624588164, -0.06693932941983807, -0.29277585811663615, 0.9345270915995296, 1.2498219156406085, 1.082463206709231, -0.15602955795127357, -0.5518185562574192, -1.5784136582605208, 1.5884628058905628, 2.2811107729038023]
@test pvalue(GrubbsTest(x, tail = :right)) ≈ 0.5064 atol = 1e-3
@test pvalue(GrubbsTest(x, tail = :left)) ≈ 0.6248 atol = 1e-3
@test pvalue(GrubbsTest(x, tail = :both)) ≈ 0.9872 atol = 1e-3

x[end] = 10
@test pvalue(GrubbsTest(x, tail = :right)) ≈ 0.0 atol = 1e-3
@test pvalue(GrubbsTest(x, tail = :left)) ≈ 1.0 atol = 1e-3
@test pvalue(GrubbsTest(x, tail = :both)) ≈ 0.0 atol = 1e-3
end

#= library(outliers)
x= c(1.4512896591650737, -0.6014707661009177, -0.818159790068436, 0.05555342809452664, 0.7711431835662762, 0.13916040721483905, -0.014989821972555158, -1.2194502136192742, 1.617358624588164, -0.06693932941983807, -0.29277585811663615, 0.9345270915995296, 1.2498219156406085, 1.082463206709231, -0.15602955795127357, -0.5518185562574192, -1.5784136582605208, 1.5884628058905628, 2.2811107729038023)
grubbs.test(x, type = 10, opposite = FALSE, two.sided = FALSE)
grubbs.test(x, type = 10, opposite = TRUE, two.sided = FALSE)
grubbs.test(x, type = 10, opposite = FALSE, two.sided = TRUE)

x= c(1.4512896591650737, -0.6014707661009177, -0.818159790068436, 0.05555342809452664, 0.7711431835662762, 0.13916040721483905, -0.014989821972555158, -1.2194502136192742, 1.617358624588164, -0.06693932941983807, -0.29277585811663615, 0.9345270915995296, 1.2498219156406085, 1.082463206709231, -0.15602955795127357, -0.5518185562574192, -1.5784136582605208, 1.5884628058905628, 10)
grubbs.test(x, type = 10, opposite = FALSE, two.sided = FALSE)
grubbs.test(x, type = 10, opposite = TRUE, two.sided = FALSE)
grubbs.test(x, type = 10, opposite = FALSE, two.sided = TRUE) =#
