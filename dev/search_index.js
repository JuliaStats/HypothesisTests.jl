var documenterSearchIndex = {"docs":
[{"location":"parametric/#Parametric-tests","page":"Parametric tests","title":"Parametric tests","text":"","category":"section"},{"location":"parametric/","page":"Parametric tests","title":"Parametric tests","text":"using HypothesisTests","category":"page"},{"location":"parametric/#Power-divergence-test","page":"Parametric tests","title":"Power divergence test","text":"","category":"section"},{"location":"parametric/","page":"Parametric tests","title":"Parametric tests","text":"PowerDivergenceTest\nconfint(::PowerDivergenceTest)","category":"page"},{"location":"parametric/#HypothesisTests.PowerDivergenceTest","page":"Parametric tests","title":"HypothesisTests.PowerDivergenceTest","text":"PowerDivergenceTest(x[, y]; lambda = 1.0, theta0 = ones(length(x))/length(x))\n\nPerform a Power Divergence test.\n\nIf y is not given and x is a matrix with one row or column, or x is a vector, then a goodness-of-fit test is performed (x is treated as a one-dimensional contingency table). In this case, the hypothesis tested is whether the population probabilities equal those in theta0, or are all equal if theta0 is not given.\n\nIf x is a matrix with at least two rows and columns, it is taken as a two-dimensional contingency table. Otherwise, x and y must be vectors of the same length. The contingency table is calculated using the counts function from the StatsBase package. Then the power divergence test is conducted under the null hypothesis that the joint distribution of the cell counts in a 2-dimensional contingency table is the product of the row and column marginals.\n\nNote that the entries of x (and y if provided) must be non-negative integers.\n\nComputed confidence intervals by default are Quesenberry-Hurst intervals if the minimum of the expected cell counts exceeds 100, and Sison-Glaz intervals otherwise. See the confint(::PowerDivergenceTest) documentation for a list of supported methods to compute confidence intervals.\n\nThe power divergence test is given by\n\n    dfrac2λ(λ+1)sum_i=1^I sum_j=1^J n_ij left(n_ij\n    hatn_ij)^λ -1right\n\nwhere n_ij is the cell count in the i th row and j th column and λ is a real number determining the nature of the test to be performed:\n\nλ = 1: equal to Pearson's chi-squared statistic\nλ to 0: converges to the likelihood ratio test statistic\nλ to -1: converges to the minimum discrimination information statistic (Gokhale and Kullback, 1978)\nλ = -2: equals Neyman modified chi-squared (Neyman, 1949)\nλ = -12: equals the Freeman-Tukey statistic (Freeman and Tukey, 1950).\n\nUnder regularity conditions, the asymptotic distributions are identical (see Drost et. al. 1989). The χ^2 null approximation works best for λ near 23.\n\nImplements: pvalue, confint(::PowerDivergenceTest)\n\nReferences\n\nAgresti, Alan. Categorical Data Analysis, 3rd Edition. Wiley, 2013.\n\n\n\n\n\n","category":"type"},{"location":"parametric/#StatsAPI.confint-Tuple{PowerDivergenceTest}","page":"Parametric tests","title":"StatsAPI.confint","text":"confint(test::PowerDivergenceTest; level = 0.95, tail = :both, method = :auto)\n\nCompute a confidence interval with coverage level for multinomial proportions using one of the following methods. Possible values for method are:\n\n:auto (default): If the minimum of the expected cell counts exceeds 100, Quesenberry-Hurst intervals are used, otherwise Sison-Glaz.\n:sison_glaz: Sison-Glaz intervals\n:bootstrap: Bootstrap intervals\n:quesenberry_hurst: Quesenberry-Hurst intervals\n:gold: Gold intervals (asymptotic simultaneous intervals)\n\nReferences\n\nAgresti, Alan. Categorical Data Analysis, 3rd Edition. Wiley, 2013.\nSison, C.P and Glaz, J. Simultaneous confidence intervals and sample size determination for multinomial proportions. Journal of the American Statistical Association, 90:366-369, 1995.\nQuesensberry, C.P. and Hurst, D.C. Large Sample Simultaneous Confidence Intervals for Multinational Proportions. Technometrics, 6:191-195, 1964.\nGold, R. Z. Tests Auxiliary to χ^2 Tests in a Markov Chain. Annals of Mathematical Statistics, 30:56-74, 1963.\n\n\n\n\n\n","category":"method"},{"location":"parametric/#Pearson-chi-squared-test","page":"Parametric tests","title":"Pearson chi-squared test","text":"","category":"section"},{"location":"parametric/","page":"Parametric tests","title":"Parametric tests","text":"ChisqTest","category":"page"},{"location":"parametric/#HypothesisTests.ChisqTest","page":"Parametric tests","title":"HypothesisTests.ChisqTest","text":"ChisqTest(x[, y][, theta0 = ones(length(x))/length(x)])\n\nPerform a Pearson chi-squared test (equivalent to a PowerDivergenceTest with λ = 1).\n\nIf y is not given and x is a matrix with one row or column, or x is a vector, then a goodness-of-fit test is performed (x is treated as a one-dimensional contingency table). In this case, the hypothesis tested is whether the population probabilities equal those in theta0, or are all equal if theta0 is not given.\n\nIf only y and x are given and both are vectors of integer type, then once again a goodness-of-fit test is performed. In this case, theta0 is calculated by the proportion of each individual values in y. Here, the hypothesis tested is whether the two samples x and y come from the same population or not.\n\nIf x is a matrix with at least two rows and columns, it is taken as a two-dimensional contingency table. Otherwise, x and y must be vectors of the same length. The contingency table is calculated using counts function from the StatsBase package. Then the power divergence test is conducted under the null hypothesis that the joint distribution of the cell counts in a 2-dimensional contingency table is the product of the row and column marginals.\n\nNote that the entries of x (and y if provided) must be non-negative integers.\n\nImplements: pvalue, confint\n\n\n\n\n\n","category":"function"},{"location":"parametric/#Multinomial-likelihood-ratio-test","page":"Parametric tests","title":"Multinomial likelihood ratio test","text":"","category":"section"},{"location":"parametric/","page":"Parametric tests","title":"Parametric tests","text":"MultinomialLRTest","category":"page"},{"location":"parametric/#HypothesisTests.MultinomialLRTest","page":"Parametric tests","title":"HypothesisTests.MultinomialLRTest","text":"MultinomialLRTest(x[, y][, theta0 = ones(length(x))/length(x)])\n\nPerform a multinomial likelihood ratio test (equivalent to a PowerDivergenceTest with λ = 0).\n\nIf y is not given and x is a matrix with one row or column, or x is a vector, then a goodness-of-fit test is performed (x is treated as a one-dimensional contingency table). In this case, the hypothesis tested is whether the population probabilities equal those in theta0, or are all equal if theta0 is not given.\n\nIf x is a matrix with at least two rows and columns, it is taken as a two-dimensional contingency table. Otherwise, x and y must be vectors of the same length. The contingency table is calculated using counts function from the StatsBase package. Then the power divergence test is conducted under the null hypothesis that the joint distribution of the cell counts in a 2-dimensional contingency table is the product of the row and column marginals.\n\nNote that the entries of x (and y if provided) must be non-negative integers.\n\nImplements: pvalue, confint\n\n\n\n\n\n","category":"function"},{"location":"parametric/#t-test","page":"Parametric tests","title":"t-test","text":"","category":"section"},{"location":"parametric/","page":"Parametric tests","title":"Parametric tests","text":"OneSampleTTest\nEqualVarianceTTest\nUnequalVarianceTTest","category":"page"},{"location":"parametric/#HypothesisTests.OneSampleTTest","page":"Parametric tests","title":"HypothesisTests.OneSampleTTest","text":"OneSampleTTest(xbar::Real, stddev::Real, n::Int, μ0::Real = 0)\n\nPerform a one sample t-test of the null hypothesis that n values with mean xbar and sample standard deviation stddev  come from a distribution with mean μ0 against the alternative hypothesis that the distribution does not have mean μ0.\n\nImplements: pvalue, confint\n\n\n\n\n\nOneSampleTTest(v::AbstractVector{T<:Real}, μ0::Real = 0)\n\nPerform a one sample t-test of the null hypothesis that the data in vector v comes from a distribution with mean μ0 against the alternative hypothesis that the distribution does not have mean μ0.\n\nImplements: pvalue, confint\n\n\n\n\n\nOneSampleTTest(x::AbstractVector{T<:Real}, y::AbstractVector{T<:Real}, μ0::Real = 0)\n\nPerform a paired sample t-test of the null hypothesis that the differences between pairs of values in vectors x and y come from a distribution with mean μ0 against the alternative hypothesis that the distribution does not have mean μ0.\n\nImplements: pvalue, confint\n\nnote: Note\nThis test is also known as a t-test for paired or dependent samples, see paired difference test on Wikipedia.\n\n\n\n\n\n","category":"type"},{"location":"parametric/#HypothesisTests.EqualVarianceTTest","page":"Parametric tests","title":"HypothesisTests.EqualVarianceTTest","text":"EqualVarianceTTest(nx::Int, ny::Int, mx::Real, my::Real, vx::Real, vy::Real, μ0::Real=0)\n\nPerform a two-sample t-test of the null hypothesis that samples x and y described by the number of elements nx and ny, the mean mx and my, and variance vx and vy come from distributions with equals means and variances. The alternative hypothesis is that the distributions have different means but equal variances.\n\nImplements: pvalue, confint\n\n\n\n\n\nEqualVarianceTTest(x::AbstractVector{T<:Real}, y::AbstractVector{T<:Real})\n\nPerform a two-sample t-test of the null hypothesis that x and y come from distributions with equal means and variances against the alternative hypothesis that the distributions have different means but equal variances.\n\nImplements: pvalue, confint\n\n\n\n\n\n","category":"type"},{"location":"parametric/#HypothesisTests.UnequalVarianceTTest","page":"Parametric tests","title":"HypothesisTests.UnequalVarianceTTest","text":"UnequalVarianceTTest(x::AbstractVector{T<:Real}, y::AbstractVector{T<:Real})\n\nPerform an unequal variance two-sample t-test of the null hypothesis that x and y come from distributions with equal means against the alternative hypothesis that the distributions have different means.\n\nThis test is sometimes known as Welch's t-test. It differs from the equal variance t-test in that it computes the number of degrees of freedom of the test using the Welch-Satterthwaite equation:\n\n    ν_χ  fracleft(sum_i=1^n k_i s_i^2right)^2sum_i=1^n\n        frac(k_i s_i^2)^2ν_i\n\nImplements: pvalue, confint\n\n\n\n\n\n","category":"type"},{"location":"parametric/#z-test","page":"Parametric tests","title":"z-test","text":"","category":"section"},{"location":"parametric/","page":"Parametric tests","title":"Parametric tests","text":"OneSampleZTest\nEqualVarianceZTest\nUnequalVarianceZTest","category":"page"},{"location":"parametric/#HypothesisTests.OneSampleZTest","page":"Parametric tests","title":"HypothesisTests.OneSampleZTest","text":"OneSampleZTest(xbar::Real, stddev::Real, n::Int, μ0::Real = 0)\n\nPerform a one sample z-test of the null hypothesis that n values with mean xbar and population standard deviation stddev  come from a distribution with mean μ0 against the alternative hypothesis that the distribution does not have mean μ0.\n\nImplements: pvalue, confint\n\n\n\n\n\nOneSampleZTest(v::AbstractVector{T<:Real}, μ0::Real = 0)\n\nPerform a one sample z-test of the null hypothesis that the data in vector v comes from a distribution with mean μ0 against the alternative hypothesis that the distribution does not have mean μ0.\n\nImplements: pvalue, confint\n\n\n\n\n\nOneSampleZTest(x::AbstractVector{T<:Real}, y::AbstractVector{T<:Real}, μ0::Real = 0)\n\nPerform a paired sample z-test of the null hypothesis that the differences between pairs of values in vectors x and y come from a distribution with mean μ0 against the alternative hypothesis that the distribution does not have mean μ0.\n\nImplements: pvalue, confint\n\n\n\n\n\n","category":"type"},{"location":"parametric/#HypothesisTests.EqualVarianceZTest","page":"Parametric tests","title":"HypothesisTests.EqualVarianceZTest","text":"EqualVarianceZTest(x::AbstractVector{T<:Real}, y::AbstractVector{T<:Real})\n\nPerform a two-sample z-test of the null hypothesis that x and y come from distributions with equal means and variances against the alternative hypothesis that the distributions have different means but equal variances.\n\nImplements: pvalue, confint\n\n\n\n\n\n","category":"type"},{"location":"parametric/#HypothesisTests.UnequalVarianceZTest","page":"Parametric tests","title":"HypothesisTests.UnequalVarianceZTest","text":"UnequalVarianceZTest(x::AbstractVector{T<:Real}, y::AbstractVector{T<:Real})\n\nPerform an unequal variance two-sample z-test of the null hypothesis that x and y come from distributions with equal means against the alternative hypothesis that the distributions have different means.\n\nImplements: pvalue, confint\n\n\n\n\n\n","category":"type"},{"location":"parametric/#F-test","page":"Parametric tests","title":"F-test","text":"","category":"section"},{"location":"parametric/","page":"Parametric tests","title":"Parametric tests","text":"VarianceFTest","category":"page"},{"location":"parametric/#HypothesisTests.VarianceFTest","page":"Parametric tests","title":"HypothesisTests.VarianceFTest","text":"VarianceFTest(x::AbstractVector{<:Real}, y::AbstractVector{<:Real})\n\nPerform an F-test of the null hypothesis that two real-valued vectors x and y have equal variances.\n\nImplements: pvalue\n\nReferences\n\nGeorge E. P. Box, \"Non-Normality and Tests on Variances\", Biometrika 40 (3/4): 318–335, 1953.\n\nExternal links\n\nF-test of equality of variances on Wikipedia\n\n\n\n\n\n","category":"type"},{"location":"parametric/#One-way-ANOVA-Test","page":"Parametric tests","title":"One-way ANOVA Test","text":"","category":"section"},{"location":"parametric/","page":"Parametric tests","title":"Parametric tests","text":"OneWayANOVATest","category":"page"},{"location":"parametric/#HypothesisTests.OneWayANOVATest","page":"Parametric tests","title":"HypothesisTests.OneWayANOVATest","text":"OneWayANOVATest(groups::AbstractVector{<:Real}...)\n\nPerform one-way analysis of variance test of the hypothesis that that the groups means are equal.\n\nThe one-way analysis of variance (one-way ANOVA) is a technique that can be used to compare means of two or more samples. The ANOVA tests the null hypothesis, which states that samples in all groups are drawn from populations with the same mean values. To do this, two estimates are made of the population variance. The ANOVA produces an F-statistic, the ratio of the variance calculated among the means to the variance within the samples.\n\nImplements: pvalue\n\nExternal links\n\nOne-way analysis of variance on Wikipedia \n\n\n\n\n\n","category":"function"},{"location":"parametric/#Levene's-Test","page":"Parametric tests","title":"Levene's Test","text":"","category":"section"},{"location":"parametric/","page":"Parametric tests","title":"Parametric tests","text":"LeveneTest","category":"page"},{"location":"parametric/#HypothesisTests.LeveneTest","page":"Parametric tests","title":"HypothesisTests.LeveneTest","text":"LeveneTest(groups::AbstractVector{<:Real}...; scorediff=abs, statistic=mean)\n\nPerform Levene's test of the hypothesis that that the groups variances are equal. By default the mean statistic is used for centering in each of the groups, but other statistics are accepted: median or truncated mean, see BrownForsytheTest. By default the absolute value of the score difference, scorediff, is used, but other functions are accepted: x² or √|x|.\n\nThe test statistic, W, is equivalent to the F statistic, and is defined as follows:\n\nW = frac(N-k)(k-1) cdot fracsum_i=1^k N_i (Z_icdot-Z_cdotcdot)^2\n    sum_i=1^k sum_j=1^N_i (Z_ij-Z_icdot)^2\n\nwhere\n\nk is the number of different groups to which the sampled cases belong,\nN_i is the number of cases in the ith group,\nN is the total number of cases in all groups,\nY_ij is the value of the measured variable for the jth case from the ith group,\nZ_ij = Y_ij - barY_icdot, barY_icdot is a mean of the  ith group,\nZ_icdot = frac1N_i sum_j=1^N_i Z_ij is the mean of the Z_ij for group i,\nZ_cdotcdot = frac1N sum_i=1^k sum_j=1^N_i Z_ij is the mean of all Z_ij.\n\nThe test statistic W is approximately F-distributed with k-1 and N-k degrees of freedom.\n\nImplements: pvalue\n\nReferences\n\nLevene, Howard, \"Robust tests for equality of variances\".  In Ingram Olkin; Harold Hotelling; et al. (eds.).  Contributions to Probability and Statistics: Essays in Honor of Harold Hotelling.  Stanford University Press. pp. 278–292, 1960\n\nExternal links\n\nLevene's test on Wikipedia \n\n\n\n\n\n","category":"function"},{"location":"parametric/#Brown-Forsythe-Test","page":"Parametric tests","title":"Brown-Forsythe Test","text":"","category":"section"},{"location":"parametric/","page":"Parametric tests","title":"Parametric tests","text":"BrownForsytheTest","category":"page"},{"location":"parametric/#HypothesisTests.BrownForsytheTest","page":"Parametric tests","title":"HypothesisTests.BrownForsytheTest","text":"BrownForsytheTest(groups::AbstractVector{<:Real}...)\n\nThe Brown–Forsythe test is a statistical test for the equality of groups variances.\n\nThe Brown–Forsythe test is a modification of the Levene's test with the median instead of the mean statistic for computing the spread within each group.\n\nImplements: pvalue\n\nReferences\n\nBrown, Morton B.; Forsythe, Alan B., \"Robust tests for the equality of variances\". Journal of the American Statistical Association. 69: 364–367, 1974 doi:10.1080/01621459.1974.10482955.\n\nExternal links\n\nBrown–Forsythe test on Wikipedia \n\n\n\n\n\n","category":"function"},{"location":"nonparametric/#Nonparametric-tests","page":"Nonparametric tests","title":"Nonparametric tests","text":"","category":"section"},{"location":"nonparametric/#Anderson-Darling-test","page":"Nonparametric tests","title":"Anderson-Darling test","text":"","category":"section"},{"location":"nonparametric/","page":"Nonparametric tests","title":"Nonparametric tests","text":"Available are both one-sample and k-sample tests.","category":"page"},{"location":"nonparametric/","page":"Nonparametric tests","title":"Nonparametric tests","text":"OneSampleADTest\nKSampleADTest","category":"page"},{"location":"nonparametric/#HypothesisTests.OneSampleADTest","page":"Nonparametric tests","title":"HypothesisTests.OneSampleADTest","text":"OneSampleADTest(x::AbstractVector{<:Real}, d::UnivariateDistribution)\n\nPerform a one-sample Anderson–Darling test of the null hypothesis that the data in vector x come from the distribution d against the alternative hypothesis that the sample is not drawn from d.\n\nImplements: pvalue\n\n\n\n\n\n","category":"type"},{"location":"nonparametric/#HypothesisTests.KSampleADTest","page":"Nonparametric tests","title":"HypothesisTests.KSampleADTest","text":"KSampleADTest(xs::AbstractVector{<:Real}...; modified = true, nsim = 0)\n\nPerform a k-sample Anderson–Darling test of the null hypothesis that the data in the k vectors xs come from the same distribution against the alternative hypothesis that the samples come from different distributions.\n\nmodified parameter enables a modified test calculation for samples whose observations do not all coincide.\n\nIf nsim is equal to 0 (the default) the asymptotic calculation of p-value is used. If it is greater than 0, an estimation of p-values is used by generating nsim random splits of the pooled data on k samples, evaluating the AD statistics for each split, and computing the proportion of simulated values which are greater or equal to observed. This proportion is reported as p-value estimate.\n\nImplements: pvalue\n\nReferences\n\nF. W. Scholz and M. A. Stephens, K-Sample Anderson-Darling Tests, Journal of the American Statistical Association, Vol. 82, No. 399. (Sep., 1987), pp. 918-924.\n\n\n\n\n\n","category":"type"},{"location":"nonparametric/#Binomial-test","page":"Nonparametric tests","title":"Binomial test","text":"","category":"section"},{"location":"nonparametric/","page":"Nonparametric tests","title":"Nonparametric tests","text":"BinomialTest\nconfint(::BinomialTest)","category":"page"},{"location":"nonparametric/#HypothesisTests.BinomialTest","page":"Nonparametric tests","title":"HypothesisTests.BinomialTest","text":"BinomialTest(x::Integer, n::Integer, p::Real = 0.5)\nBinomialTest(x::AbstractVector{Bool}, p::Real = 0.5)\n\nPerform a binomial test of the null hypothesis that the distribution from which x successes were encountered in n draws (or alternatively from which the vector x was drawn) has success probability p against the alternative hypothesis that the success probability is not equal to p.\n\nComputed confidence intervals by default are Clopper-Pearson intervals. See the confint(::BinomialTest) documentation for a list of supported methods to compute confidence intervals.\n\nImplements: pvalue, confint(::BinomialTest)\n\n\n\n\n\n","category":"type"},{"location":"nonparametric/#StatsAPI.confint-Tuple{BinomialTest}","page":"Nonparametric tests","title":"StatsAPI.confint","text":"confint(test::BinomialTest; level = 0.95, tail = :both, method = :clopper_pearson)\n\nCompute a confidence interval with coverage level for a binomial proportion using one of the following methods. Possible values for method are:\n\n:clopper_pearson (default): Clopper-Pearson interval is based on the binomial distribution. The empirical coverage is never less than the nominal coverage of level; it is usually too conservative.\n:wald: Wald (or normal approximation) interval relies on the standard approximation of the actual binomial distribution by a normal distribution. Coverage can be erratically poor for success probabilities close to zero or one.\n:waldcc: Wald interval with a continuity correction that extends the interval by 1/2n on both ends.\n:wilson: Wilson score interval relies on a normal approximation. In contrast to :wald, the standard deviation is not approximated by an empirical estimate, resulting in good empirical coverages even for small numbers of draws and extreme success probabilities.\n:jeffrey: Jeffreys interval is a Bayesian credible interval obtained by using a non-informative Jeffreys prior. The interval is very similar to the Wilson interval.\n:agresti_coull: Agresti-Coull interval is a simplified version of the Wilson interval; both are centered around the same value. The Agresti Coull interval has higher or equal coverage.\n:arcsine: Confidence interval computed using the arcsine transformation to make var(p) independent of the probability p.\n\nReferences\n\nBrown, L.D., Cai, T.T., and DasGupta, A. Interval estimation for a binomial proportion. Statistical Science, 16(2):101–117, 2001.\nPires, Ana & Amado, Conceição. (2008). Interval Estimators for a Binomial Proportion:  Comparison of Twenty Methods. REVSTAT. 6. 10.57805/revstat.v6i2.63.\n\nExternal links\n\nBinomial confidence interval on Wikipedia\n\n\n\n\n\n","category":"method"},{"location":"nonparametric/#Fisher-exact-test","page":"Nonparametric tests","title":"Fisher exact test","text":"","category":"section"},{"location":"nonparametric/","page":"Nonparametric tests","title":"Nonparametric tests","text":"FisherExactTest\nconfint(::FisherExactTest)\npvalue(::FisherExactTest)","category":"page"},{"location":"nonparametric/#HypothesisTests.FisherExactTest","page":"Nonparametric tests","title":"HypothesisTests.FisherExactTest","text":"FisherExactTest(a::Integer, b::Integer, c::Integer, d::Integer)\n\nPerform Fisher's exact test of the null hypothesis that the success probabilities ac and bd are equal, that is the odds ratio (ac)  (bd) is one, against the alternative hypothesis that they are not equal.\n\nSee pvalue(::FisherExactTest) and confint(::FisherExactTest) for details about the computation of the default p-value and confidence interval, respectively.\n\nThe contingency table is structured as:\n\n- X1 X2\nY1 a b\nY2 c d\n\nnote: Note\nThe show function output contains the conditional maximum likelihood estimate of the odds ratio rather than the sample odds ratio; it maximizes the likelihood given by Fisher's non-central hypergeometric distribution.\n\nImplements: pvalue(::FisherExactTest), confint(::FisherExactTest)\n\nReferences\n\nFay, M.P., Supplementary material to \"Confidence intervals that match Fisher’s exact or Blaker’s exact tests\". Biostatistics, Volume 11, Issue 2, 1 April 2010, Pages 373–374, link\n\n\n\n\n\n","category":"type"},{"location":"nonparametric/#StatsAPI.confint-Tuple{FisherExactTest}","page":"Nonparametric tests","title":"StatsAPI.confint","text":"confint(x::FisherExactTest; level::Float64=0.95, tail=:both, method=:central)\n\nCompute a confidence interval with coverage level. One-sided intervals are based on Fisher's non-central hypergeometric distribution. For tail = :both, the only method implemented yet is the central interval (:central).\n\nnote: Note\nSince the p-value is not necessarily unimodal, the corresponding confidence region might not be an interval.\n\nReferences\n\nGibbons, J.D, Pratt, J.W. P-values: Interpretation and Methodology, American Statistican, 29(1):20-25, 1975.\nFay, M.P., Supplementary material to \"Confidence intervals that match Fisher’s exact or Blaker’s exact tests\". Biostatistics, Volume 11, Issue 2, 1 April 2010, Pages 373–374, link\n\n\n\n\n\n","category":"method"},{"location":"nonparametric/#StatsAPI.pvalue-Tuple{FisherExactTest}","page":"Nonparametric tests","title":"StatsAPI.pvalue","text":"pvalue(x::FisherExactTest; tail = :both, method = :central)\n\nCompute the p-value for a given Fisher exact test.\n\nThe one-sided p-values are based on Fisher's non-central hypergeometric distribution f_ω(i) with odds ratio ω:\n\n    beginalign*\n        p_ω^(textleft) =sum_i  a f_ω(i)\n        p_ω^(textright) =sum_i  a f_ω(i)\n    endalign*\n\nFor tail = :both, possible values for method are:\n\n:central (default): Central interval, i.e. the p-value is two times the minimum of the one-sided p-values.\n:minlike: Minimum likelihood interval, i.e. the p-value is computed by summing all tables with the same marginals that are equally or less probable:\n    p_ω = sum_f_ω(i) f_ω(a) f_ω(i)\n\nReferences\n\nGibbons, J.D., Pratt, J.W., P-values: Interpretation and Methodology, American Statistican, 29(1):20-25, 1975.\nFay, M.P., Supplementary material to \"Confidence intervals that match Fisher’s exact or Blaker’s exact tests\". Biostatistics, Volume 11, Issue 2, 1 April 2010, Pages 373–374, link\n\n\n\n\n\n","category":"method"},{"location":"nonparametric/#Kolmogorov-Smirnov-test","page":"Nonparametric tests","title":"Kolmogorov-Smirnov test","text":"","category":"section"},{"location":"nonparametric/","page":"Nonparametric tests","title":"Nonparametric tests","text":"Available are an exact one-sample test and approximate (i.e. asymptotic) one- and two-sample tests.","category":"page"},{"location":"nonparametric/","page":"Nonparametric tests","title":"Nonparametric tests","text":"ExactOneSampleKSTest\nApproximateOneSampleKSTest\nApproximateTwoSampleKSTest","category":"page"},{"location":"nonparametric/#HypothesisTests.ExactOneSampleKSTest","page":"Nonparametric tests","title":"HypothesisTests.ExactOneSampleKSTest","text":"ExactOneSampleKSTest(x::AbstractVector{<:Real}, d::UnivariateDistribution)\n\nPerform a one-sample exact Kolmogorov–Smirnov test of the null hypothesis that the data in vector x comes from the distribution d against the alternative hypothesis that the sample is not drawn from d.\n\nImplements: pvalue\n\n\n\n\n\n","category":"type"},{"location":"nonparametric/#HypothesisTests.ApproximateOneSampleKSTest","page":"Nonparametric tests","title":"HypothesisTests.ApproximateOneSampleKSTest","text":"ApproximateOneSampleKSTest(x::AbstractVector{<:Real}, d::UnivariateDistribution)\n\nPerform an asymptotic one-sample Kolmogorov–Smirnov test of the null hypothesis that the data in vector x comes from the distribution d against the alternative hypothesis that the sample is not drawn from d.\n\nImplements: pvalue\n\n\n\n\n\n","category":"type"},{"location":"nonparametric/#HypothesisTests.ApproximateTwoSampleKSTest","page":"Nonparametric tests","title":"HypothesisTests.ApproximateTwoSampleKSTest","text":"ApproximateTwoSampleKSTest(x::AbstractVector{<:Real}, y::AbstractVector{<:Real})\n\nPerform an asymptotic two-sample Kolmogorov–Smirnov-test of the null hypothesis that x and y are drawn from the same distribution against the alternative hypothesis that they come from different distributions.\n\nImplements: pvalue\n\nExternal links\n\nApproximation of one-sided test (Encyclopedia of Mathematics) \n\n\n\n\n\n","category":"type"},{"location":"nonparametric/#Kruskal-Wallis-rank-sum-test","page":"Nonparametric tests","title":"Kruskal-Wallis rank sum test","text":"","category":"section"},{"location":"nonparametric/","page":"Nonparametric tests","title":"Nonparametric tests","text":"KruskalWallisTest","category":"page"},{"location":"nonparametric/#HypothesisTests.KruskalWallisTest","page":"Nonparametric tests","title":"HypothesisTests.KruskalWallisTest","text":"KruskalWallisTest(groups::AbstractVector{<:Real}...)\n\nPerform Kruskal-Wallis rank sum test of the null hypothesis that the groups mathcalG come from the same distribution against the alternative hypothesis that that at least one group stochastically dominates one other group.\n\nThe Kruskal-Wallis test is an extension of the Mann-Whitney U test to more than two groups.\n\nThe p-value is computed using a χ^2 approximation to the distribution of the test statistic H_c=fracHC:\n\n    beginalign*\n    H  = frac12n(n+1) sum_g  mathcalG fracR_g^2n_g - 3(n+1)\n    C  = 1-frac1n^3-nsum_t  mathcalT (t^3-t)\n    endalign*\n\nwhere mathcalT is the set of the counts of tied values at each tied position, n is the total number of observations across all groups, and n_g and R_g are the number of observations and the rank sum in group g, respectively. See references for further details.\n\nImplements: pvalue\n\nReferences\n\nMeyer, J.P, Seaman, M.A., Expanded tables of critical values for the Kruskal-Wallis H statistic. Paper presented at the annual meeting of the American Educational Research Association, San Francisco, April 2006.\n\nExternal links\n\nKruskal-Wallis test on Wikipedia \n\n\n\n\n\n","category":"type"},{"location":"nonparametric/#Mann-Whitney-U-test","page":"Nonparametric tests","title":"Mann-Whitney U test","text":"","category":"section"},{"location":"nonparametric/","page":"Nonparametric tests","title":"Nonparametric tests","text":"MannWhitneyUTest\nExactMannWhitneyUTest\nApproximateMannWhitneyUTest","category":"page"},{"location":"nonparametric/#HypothesisTests.MannWhitneyUTest","page":"Nonparametric tests","title":"HypothesisTests.MannWhitneyUTest","text":"MannWhitneyUTest(x::AbstractVector{<:Real}, y::AbstractVector{<:Real})\n\nPerform a Mann-Whitney U test of the null hypothesis that the probability that an observation drawn from the same population as x is greater than an observation drawn from the same population as y is equal to the probability that an observation drawn from the same population as y is greater than an observation drawn from the same population as x against the alternative hypothesis that these probabilities are not equal.\n\nThe Mann-Whitney U test is sometimes known as the Wilcoxon rank-sum test.\n\nWhen there are no tied ranks and ≤50 samples, or tied ranks and ≤10 samples, MannWhitneyUTest performs an exact Mann-Whitney U test. In all other cases, MannWhitneyUTest performs an approximate Mann-Whitney U test. Behavior may be further controlled by using ExactMannWhitneyUTest or ApproximateMannWhitneyUTest directly.\n\nImplements: pvalue\n\n\n\n\n\n","category":"function"},{"location":"nonparametric/#HypothesisTests.ExactMannWhitneyUTest","page":"Nonparametric tests","title":"HypothesisTests.ExactMannWhitneyUTest","text":"ExactMannWhitneyUTest(x::AbstractVector{<:Real}, y::AbstractVector{<:Real})\n\nPerform an exact Mann-Whitney U test of the null hypothesis that the probability that an observation drawn from the same population as x is greater than an observation drawn from the same population as y is equal to the probability that an observation drawn from the same population as y is greater than an observation drawn from the same population as x against the alternative hypothesis that these probabilities are not equal.\n\nWhen there are no tied ranks, the exact p-value is computed using the pwilcox function from the Rmath package. In the presence of tied ranks, a p-value is computed by exhaustive enumeration of permutations, which can be very slow for even moderately sized data sets.\n\nImplements: pvalue\n\n\n\n\n\n","category":"type"},{"location":"nonparametric/#HypothesisTests.ApproximateMannWhitneyUTest","page":"Nonparametric tests","title":"HypothesisTests.ApproximateMannWhitneyUTest","text":"ApproximateMannWhitneyUTest(x::AbstractVector{<:Real}, y::AbstractVector{<:Real})\n\nPerform an approximate Mann-Whitney U test of the null hypothesis that the probability that an observation drawn from the same population as x is greater than an observation drawn from the same population as y is equal to the probability that an observation drawn from the same population as y is greater than an observation drawn from the same population as x against the alternative hypothesis that these probabilities are not equal.\n\nThe p-value is computed using a normal approximation to the distribution of the Mann-Whitney U statistic:\n\n    beginalign*\n        μ  = fracn_x n_y2\n        σ  = fracn_x n_y12left(n_x + n_y + 1 - fraca(n_x + n_y)(n_x +\n            n_y - 1)right)\n        a  = sum_t in mathcalT t^3 - t\n    endalign*\n\nwhere mathcalT is the set of the counts of tied values at each tied position.\n\nImplements: pvalue\n\n\n\n\n\n","category":"type"},{"location":"nonparametric/#Sign-test","page":"Nonparametric tests","title":"Sign test","text":"","category":"section"},{"location":"nonparametric/","page":"Nonparametric tests","title":"Nonparametric tests","text":"SignTest","category":"page"},{"location":"nonparametric/#HypothesisTests.SignTest","page":"Nonparametric tests","title":"HypothesisTests.SignTest","text":"SignTest(x::AbstractVector{T<:Real}, median::Real = 0)\nSignTest(x::AbstractVector{T<:Real}, y::AbstractVector{T<:Real}, median::Real = 0)\n\nPerform a sign test of the null hypothesis that the distribution from which x (or x - y if y is provided) was drawn has median median against the alternative hypothesis that the median is not equal to median.\n\nImplements: pvalue, confint\n\n\n\n\n\n","category":"type"},{"location":"nonparametric/#Wald-Wolfowitz-independence-test","page":"Nonparametric tests","title":"Wald-Wolfowitz independence test","text":"","category":"section"},{"location":"nonparametric/","page":"Nonparametric tests","title":"Nonparametric tests","text":"WaldWolfowitzTest","category":"page"},{"location":"nonparametric/#HypothesisTests.WaldWolfowitzTest","page":"Nonparametric tests","title":"HypothesisTests.WaldWolfowitzTest","text":"WaldWolfowitzTest(x::AbstractVector{Bool})\nWaldWolfowitzTest(x::AbstractVector{<:Real})\n\nPerform the Wald-Wolfowitz (or Runs) test of the null hypothesis that the given data is random, or independently sampled. The data can come as many-valued or two-valued (Boolean). If many-valued, the sample is transformed by labelling each element as above or below the median.\n\nImplements: pvalue\n\n\n\n\n\n","category":"type"},{"location":"nonparametric/#Wilcoxon-signed-rank-test","page":"Nonparametric tests","title":"Wilcoxon signed rank test","text":"","category":"section"},{"location":"nonparametric/","page":"Nonparametric tests","title":"Nonparametric tests","text":"SignedRankTest\nExactSignedRankTest\nApproximateSignedRankTest","category":"page"},{"location":"nonparametric/#HypothesisTests.SignedRankTest","page":"Nonparametric tests","title":"HypothesisTests.SignedRankTest","text":"SignedRankTest(x::AbstractVector{<:Real})\nSignedRankTest(x::AbstractVector{<:Real}, y::AbstractVector{<:Real})\n\nPerform a Wilcoxon signed rank test of the null hypothesis that the distribution of x (or the difference x - y if y is provided) has zero median against the alternative hypothesis that the median is non-zero.\n\nWhen there are no tied ranks and ≤50 samples, or tied ranks and ≤15 samples, SignedRankTest performs an exact signed rank test. In all other cases, SignedRankTest performs an approximate signed rank test. Behavior may be further controlled by using ExactSignedRankTest or ApproximateSignedRankTest directly.\n\nImplements: pvalue, confint\n\n\n\n\n\n","category":"function"},{"location":"nonparametric/#HypothesisTests.ExactSignedRankTest","page":"Nonparametric tests","title":"HypothesisTests.ExactSignedRankTest","text":"ExactSignedRankTest(x::AbstractVector{<:Real}[, y::AbstractVector{<:Real}])\n\nPerform a Wilcoxon exact signed rank U test of the null hypothesis that the distribution of x (or the difference x - y if y is provided) has zero median against the alternative hypothesis that the median is non-zero.\n\nWhen there are no tied ranks, the exact p-value is computed using the psignrank function from the Rmath package. In the presence of tied ranks, a p-value is computed by exhaustive enumeration of permutations, which can be very slow for even moderately sized data sets.\n\nImplements: pvalue, confint\n\n\n\n\n\n","category":"type"},{"location":"nonparametric/#HypothesisTests.ApproximateSignedRankTest","page":"Nonparametric tests","title":"HypothesisTests.ApproximateSignedRankTest","text":"ApproximateSignedRankTest(x::AbstractVector{<:Real}[, y::AbstractVector{<:Real}])\n\nPerform a Wilcoxon approximate signed rank U test of the null hypothesis that the distribution of x (or the difference x - y if y is provided) has zero median against the alternative hypothesis that the median is non-zero.\n\nThe p-value is computed using a normal approximation to the distribution of the signed rank statistic:\n\n    beginalign*\n        μ  = fracn(n + 1)4\n        σ  = fracn(n + 1)(2 * n + 1)24 - fraca48\n        a  = sum_t in mathcalT t^3 - t\n    endalign*\n\nwhere mathcalT is the set of the counts of tied values at each tied position.\n\nImplements: pvalue, confint\n\n\n\n\n\n","category":"type"},{"location":"nonparametric/#Permutation-test","page":"Nonparametric tests","title":"Permutation test","text":"","category":"section"},{"location":"nonparametric/","page":"Nonparametric tests","title":"Nonparametric tests","text":"ExactPermutationTest\nApproximatePermutationTest","category":"page"},{"location":"nonparametric/#HypothesisTests.ExactPermutationTest","page":"Nonparametric tests","title":"HypothesisTests.ExactPermutationTest","text":"ExactPermutationTest(x::Vector, y::Vector, f::Function)\n\nPerform a permutation test (a.k.a. randomization test) of the null hypothesis that f(x) is equal to f(y).  All possible permutations are sampled.\n\n\n\n\n\n","category":"function"},{"location":"nonparametric/#HypothesisTests.ApproximatePermutationTest","page":"Nonparametric tests","title":"HypothesisTests.ApproximatePermutationTest","text":"ApproximatePermutationTest([rng::AbstractRNG,] x::Vector, y::Vector, f::Function, n::Int)\n\nPerform a permutation test (a.k.a. randomization test) of the null hypothesis that f(x) is equal to f(y).  n of the factorial(length(x)+length(y)) permutations are sampled at random. A random number generator can optionally be passed as the first argument. The default generator is Random.default_rng().\n\n\n\n\n\n","category":"function"},{"location":"nonparametric/#Fligner-Killeen-test","page":"Nonparametric tests","title":"Fligner-Killeen test","text":"","category":"section"},{"location":"nonparametric/","page":"Nonparametric tests","title":"Nonparametric tests","text":"FlignerKilleenTest","category":"page"},{"location":"nonparametric/#HypothesisTests.FlignerKilleenTest","page":"Nonparametric tests","title":"HypothesisTests.FlignerKilleenTest","text":"FlignerKilleenTest(groups::AbstractVector{<:Real}...)\n\nPerform Fligner-Killeen median test of the null hypothesis that the groups have equal variances, a test for homogeneity of variances.\n\nThis test is most robust against departures from normality, see references. It is a k-sample simple linear rank method that uses the ranks of the absolute values of the centered samples and weights\n\na_Ni = Phi^-1(12 + (i2(N+1)))\n\nThe version implemented here uses median centering in each of the samples.\n\nImplements: pvalue\n\nReferences\n\nConover, W. J., Johnson, M. E., Johnson, M. M., A comparative study of tests for homogeneity of variances, with applications to the outer continental shelf bidding data. Technometrics, 23, 351–361, 1980\n\nExternal links\n\nFligner-Killeen test on Statistical Analysis Handbook \n\n\n\n\n\n","category":"function"},{"location":"time_series/#Time-series-tests","page":"Time series tests","title":"Time series tests","text":"","category":"section"},{"location":"time_series/#Durbin-Watson-test","page":"Time series tests","title":"Durbin-Watson test","text":"","category":"section"},{"location":"time_series/","page":"Time series tests","title":"Time series tests","text":"DurbinWatsonTest","category":"page"},{"location":"time_series/#HypothesisTests.DurbinWatsonTest","page":"Time series tests","title":"HypothesisTests.DurbinWatsonTest","text":"DurbinWatsonTest(X::AbstractArray, e::AbstractVector; p_compute::Symbol = :ndep)\n\nCompute the Durbin-Watson test for serial correlation in the residuals of a regression model.\n\nX is the matrix of regressors from the original regression model and e the vector of residuals. Note that the Durbin-Watson test is not valid if X includes a lagged dependent variable. The test statistic is computed as\n\nDW = fracsum_t=2^n (e_t - e_t-1)^2sum_t=1^n e_t^2\n\nwhere n is the number of observations.\n\nBy default, the choice of approach to compute p-values depends on the sample size (p_compute=:ndep). For small samples (n<100), Pan's algorithm (Farebrother, 1980) is employed. For larger samples, a normal approximation is used (Durbin and Watson, 1950). To always use Pan's algorithm, set p_compute=:exact. p_compute=:approx will always use the normal approximation.\n\nDefault is a two-sided p-value for the alternative hypothesis of positive or negative serial correlation. One-sided p-values can be requested by calling pvalue(x::DurbinWatsonTest; tail=) with the options :left (negative serial correlation) and :right (positive serial correlation).\n\nReferences\n\nJ. Durbin and G. S. Watson, 1951, \"Testing for Serial Correlation in Least Squares Regression: II\", Biometrika, Vol. 38, No. 1/2, pp. 159-177, http://www.jstor.org/stable/2332325.\nJ. Durbin and G. S. Watson, 1950, \"Testing for Serial Correlation in Least Squares Regression: I\", Biometrika, Vol. 37, No. 3/4, pp. 409-428, http://www.jstor.org/stable/2332391.\nR. W. Farebrother, 1980, \"Algorithm AS 153: Pan's Procedure for the Tail Probabilities of the Durbin-Watson Statistic\", Journal of the Royal Statistical Society, Series C (Applied Statistics), Vol. 29, No. 2, pp. 224-227, http://www.jstor.org/stable/2986316.\n\nExternal links\n\nDurbin-Watson test on Wikipedia\n\n\n\n\n\n","category":"type"},{"location":"time_series/#Box-Pierce-and-Ljung-Box-tests","page":"Time series tests","title":"Box-Pierce and Ljung-Box tests","text":"","category":"section"},{"location":"time_series/","page":"Time series tests","title":"Time series tests","text":"BoxPierceTest\nLjungBoxTest","category":"page"},{"location":"time_series/#HypothesisTests.BoxPierceTest","page":"Time series tests","title":"HypothesisTests.BoxPierceTest","text":"BoxPierceTest(y, lag, dof=0)\n\nCompute the Box-Pierce Q statistic to test the null hypothesis of independence in a time series y.\n\nlag specifies the number of lags used in the construction of Q. When testing the residuals of an estimated model, dof has to be set to the number of estimated parameters. E.g., when testing the residuals of an ARIMA(p,0,q) model, set dof=p+q.\n\nExternal links\n\nBox-Pierce test on Wikipedia\n\n\n\n\n\n","category":"type"},{"location":"time_series/#HypothesisTests.LjungBoxTest","page":"Time series tests","title":"HypothesisTests.LjungBoxTest","text":"LjungBoxTest(y, lag, dof=0)\n\nCompute the Ljung-Box Q statistic to test the null hypothesis of independence in a time series y.\n\nlag specifies the number of lags used in the construction of Q. When testing the residuals of an estimated model, dof has to be set to the number of estimated parameters. E.g., when testing the residuals of an ARIMA(p,0,q) model, set dof=p+q.\n\nExternal links\n\nLjung-Box test on Wikipedia\n\n\n\n\n\n","category":"type"},{"location":"time_series/#Breusch-Godfrey-test","page":"Time series tests","title":"Breusch-Godfrey test","text":"","category":"section"},{"location":"time_series/","page":"Time series tests","title":"Time series tests","text":"BreuschGodfreyTest","category":"page"},{"location":"time_series/#HypothesisTests.BreuschGodfreyTest","page":"Time series tests","title":"HypothesisTests.BreuschGodfreyTest","text":"BreuschGodfreyTest(X, e, lag, start0 = true)\n\nCompute the Breusch-Godfrey test for serial correlation in the residuals of a regression model.\n\nX is the matrix of regressors from the original model and e the vector of residuals. lag determines the number of lagged residuals included in the auxiliary regression. Set start0 to specify how the starting values for the lagged residuals are handled. start0 = true (default) sets them to zero (as in Godfrey, 1978); start0 = false uses the first lag residuals as starting values, i.e. shortening the sample by lag.\n\nExternal links\n\nBreusch-Godfrey test on Wikipedia\n\n\n\n\n\n","category":"type"},{"location":"time_series/#Jarque-Bera-test","page":"Time series tests","title":"Jarque-Bera test","text":"","category":"section"},{"location":"time_series/","page":"Time series tests","title":"Time series tests","text":"JarqueBeraTest","category":"page"},{"location":"time_series/#HypothesisTests.JarqueBeraTest","page":"Time series tests","title":"HypothesisTests.JarqueBeraTest","text":"JarqueBeraTest(y::AbstractVector; adjusted::Bool=false)\n\nWhen adjusted is false, compute the Jarque-Bera statistic to test the null hypothesis that a real-valued vector y is normally distributed.\n\nNote that the approximation by the Chi-squared distribution does not work well and the speed of convergence is slow. In small samples, the test tends to be over-sized for nominal levels up to about 3% and under-sized for larger nominal levels (Mantalos, 2010).\n\nWhen adjusted is true, compute the Adjusted Lagrangian Multiplier statistic to test the null hypothesis that a real-valued vector y is normally distributed.\n\nNote that the use of Adjusted Lagrangian Multiplier is preferred over Jarque-Bera for small and medium sample sizes and it is a modification to the Jarque-Bera test (Urzua, 1996).\n\nReferences\n\nPanagiotis Mantalos, 2011, \"The three different measures of the sample skewness and kurtosis and the effects to the Jarque-Bera test for normality\", International Journal of Computational Economics and Econometrics, Vol. 2, No. 1, link.\nCarlos M. Urzúa, \"On the correct use of omnibus tests for normality\", Economics Letters, Volume 53, Issue 3, link.\n\nExternal links\n\nJarque-Bera test on Wikipedia\n\n\n\n\n\n","category":"type"},{"location":"time_series/#Augmented-Dickey-Fuller-test","page":"Time series tests","title":"Augmented Dickey-Fuller test","text":"","category":"section"},{"location":"time_series/","page":"Time series tests","title":"Time series tests","text":"ADFTest","category":"page"},{"location":"time_series/#HypothesisTests.ADFTest","page":"Time series tests","title":"HypothesisTests.ADFTest","text":"ADFTest(y::AbstractVector{T}, deterministic::Symbol, lag::Int) where T<:Real\n\nCompute the augmented Dickey-Fuller unit root test.\n\ny is the time series to be tested, deterministic determines the deterministic terms (options: :none, :constant, :trend, :squared_trend) and lag the number of lagged first-differences included in the test regression, respectively.\n\nCritical values and asymptotic p-values are computed based on response surface regressions following MacKinnon (2010) and MacKinnon (1994), respectively. These may differ slightly from those reported in other regression packages as different algorithms might be used.\n\nReferences\n\nJames G. MacKinnon, 2010, \"Critical values for cointegration tests,\" QED Working Paper No. 1227, 2010, link.\nJames G. MacKinnon, 1994, \"Approximate Asymptotic Distribution Functions for Unit-Root and Cointegration Tests\", Journal of Business & Economic Statistics, Vol. 12, No. 2, pp. 167-176, link.\n\nExternal links\n\nAugmented Dickey-Fuller test on Wikipedia\n\n\n\n\n\n","category":"type"},{"location":"time_series/#Clark-West-test","page":"Time series tests","title":"Clark-West test","text":"","category":"section"},{"location":"time_series/","page":"Time series tests","title":"Time series tests","text":"ClarkWestTest","category":"page"},{"location":"time_series/#HypothesisTests.ClarkWestTest","page":"Time series tests","title":"HypothesisTests.ClarkWestTest","text":"ClarkWestTest(e1::AbstractVector{<:Real}, e2::AbstractVector{<:Real}, lookahead::Integer=1)\n\nPerform the Clark-West test of equal performance of two nested prediction models, in terms of the out-of-sample mean squared prediction errors.\n\ne1 is a vector of forecasts from the smaller (nested) model, e2 is a vector of forecast errors from the larger model, and lookahead is the number of steps ahead of the forecast. Typically, the null hypothesis is that the two models perform equally well (a two-sided test), but sometimes we test whether the larger model performs better, which is indicated by a positive test statistic, for instance, above 1.645 for the 5% significance level (right tail test).\n\nImplements: pvalue\n\nReferences\n\nClark, T. E., West, K. D. 2006, Using out-of-sample mean squared prediction errors to test the martingale difference hypothesis. Journal of Econometrics, 135(1): 155–186.\nClark, T. E., West, K. D. 2007, Approximately normal tests for equal predictive accuracy in nested models. Journal of Econometrics, 138(1): 291–311.\n\n\n\n\n\n","category":"type"},{"location":"time_series/#Diebold-Mariano-test","page":"Time series tests","title":"Diebold-Mariano test","text":"","category":"section"},{"location":"time_series/","page":"Time series tests","title":"Time series tests","text":"DieboldMarianoTest","category":"page"},{"location":"time_series/#HypothesisTests.DieboldMarianoTest","page":"Time series tests","title":"HypothesisTests.DieboldMarianoTest","text":"DieboldMarianoTest(e1::AbstractVector{<:Real}, e2::AbstractVector{<:Real}; loss=abs2, lookahead=1)\n\nPerform the modified Diebold-Mariano test proposed by Harvey, Leybourne and Newbold of the null  hypothesis that the two methods have the same forecast accuracy. loss is the loss function described in Diebold, F.X. and Mariano, R.S. (1995) Comparing predictive accuracy. Journal of Business and  Economic Statistics, 13, 253-263. and lookahead is the number of steps ahead of the forecast.\n\nReferences\n\nDiebold, F.X. and Mariano, R.S. (1995) Comparing predictive accuracy.  Journal of Business and Economic Statistics, 13, 253-263.\nHarvey, D., Leybourne, S., & Newbold, P. (1997). Testing the equality of prediction  mean squared errors. International Journal of forecasting, 13(2), 281-291.\n\n\n\n\n\n","category":"type"},{"location":"time_series/#White-test","page":"Time series tests","title":"White test","text":"","category":"section"},{"location":"time_series/","page":"Time series tests","title":"Time series tests","text":"WhiteTest\nBreuschPaganTest","category":"page"},{"location":"time_series/#HypothesisTests.WhiteTest","page":"Time series tests","title":"HypothesisTests.WhiteTest","text":"WhiteTest(X, e; type = :White)\n\nCompute White's (or Breusch-Pagan's) test for heteroskedasticity.\n\nX is a matrix of regressors and e is the vector of residuals from the original model. The keyword argument type is either :linear for the Breusch-Pagan/Koenker test, :linear_and_squares for White's test with linear and squared terms only (no cross-products), or :White (the default) for the full White's test (linear, squared and cross-product terms). X should include a constant and at least one more regressor, with observations in rows and regressors in columns. In some applications, X is a subset of the regressors in the original model, or just the fitted values. This saves degrees of freedom and may give a more powerful test. The lm (Lagrange multiplier) test statistic is T*R2 where R2 is from the regression of e^2 on the terms mentioned above. Under the null hypothesis it is distributed as Chisq(dof) where dof is the number of independent terms (not counting the constant), so the null is rejected when the test statistic is large enough.\n\nImplements: pvalue\n\nReferences\n\nH. White, (1980): A heteroskedasticity-consistent covariance matrix estimator and a direct test for heteroskedasticity, Econometrica, 48, 817-838.\nT.S. Breusch & A.R. Pagan (1979), A simple test for heteroscedasticity and random coefficient variation, Econometrica, 47, 1287-1294\nR. Koenker (1981), A note on studentizing a test for heteroscedasticity, Journal of Econometrics, 17, 107-112\n\nExternal links\n\nWhite's test on Wikipedia\n\n\n\n\n\n","category":"type"},{"location":"time_series/#HypothesisTests.BreuschPaganTest","page":"Time series tests","title":"HypothesisTests.BreuschPaganTest","text":"BreuschPaganTest(X, e)\n\nCompute Breusch-Pagan's test for heteroskedasticity.\n\nX is a matrix of regressors from the original model and e the vector of residuals. This is equivalent to WhiteTest(X, e, type = :linear). See WhiteTest for further details.\n\n\n\n\n\n","category":"function"},{"location":"methods/#Methods","page":"Methods","title":"Methods","text":"","category":"section"},{"location":"methods/","page":"Methods","title":"Methods","text":"This page documents the generic confint and pvalue methods which are supported by most tests. Some particular tests support additional arguments: see the documentation for the relevant methods provided in sections covering these tests.","category":"page"},{"location":"methods/#Confidence-interval","page":"Methods","title":"Confidence interval","text":"","category":"section"},{"location":"methods/","page":"Methods","title":"Methods","text":"confint","category":"page"},{"location":"methods/#StatsAPI.confint","page":"Methods","title":"StatsAPI.confint","text":"confint(test::BinomialTest; level = 0.95, tail = :both, method = :clopper_pearson)\n\nCompute a confidence interval with coverage level for a binomial proportion using one of the following methods. Possible values for method are:\n\n:clopper_pearson (default): Clopper-Pearson interval is based on the binomial distribution. The empirical coverage is never less than the nominal coverage of level; it is usually too conservative.\n:wald: Wald (or normal approximation) interval relies on the standard approximation of the actual binomial distribution by a normal distribution. Coverage can be erratically poor for success probabilities close to zero or one.\n:waldcc: Wald interval with a continuity correction that extends the interval by 1/2n on both ends.\n:wilson: Wilson score interval relies on a normal approximation. In contrast to :wald, the standard deviation is not approximated by an empirical estimate, resulting in good empirical coverages even for small numbers of draws and extreme success probabilities.\n:jeffrey: Jeffreys interval is a Bayesian credible interval obtained by using a non-informative Jeffreys prior. The interval is very similar to the Wilson interval.\n:agresti_coull: Agresti-Coull interval is a simplified version of the Wilson interval; both are centered around the same value. The Agresti Coull interval has higher or equal coverage.\n:arcsine: Confidence interval computed using the arcsine transformation to make var(p) independent of the probability p.\n\nReferences\n\nBrown, L.D., Cai, T.T., and DasGupta, A. Interval estimation for a binomial proportion. Statistical Science, 16(2):101–117, 2001.\nPires, Ana & Amado, Conceição. (2008). Interval Estimators for a Binomial Proportion:  Comparison of Twenty Methods. REVSTAT. 6. 10.57805/revstat.v6i2.63.\n\nExternal links\n\nBinomial confidence interval on Wikipedia\n\n\n\n\n\nconfint(x::FisherExactTest; level::Float64=0.95, tail=:both, method=:central)\n\nCompute a confidence interval with coverage level. One-sided intervals are based on Fisher's non-central hypergeometric distribution. For tail = :both, the only method implemented yet is the central interval (:central).\n\nnote: Note\nSince the p-value is not necessarily unimodal, the corresponding confidence region might not be an interval.\n\nReferences\n\nGibbons, J.D, Pratt, J.W. P-values: Interpretation and Methodology, American Statistican, 29(1):20-25, 1975.\nFay, M.P., Supplementary material to \"Confidence intervals that match Fisher’s exact or Blaker’s exact tests\". Biostatistics, Volume 11, Issue 2, 1 April 2010, Pages 373–374, link\n\n\n\n\n\nconfint(test::PowerDivergenceTest; level = 0.95, tail = :both, method = :auto)\n\nCompute a confidence interval with coverage level for multinomial proportions using one of the following methods. Possible values for method are:\n\n:auto (default): If the minimum of the expected cell counts exceeds 100, Quesenberry-Hurst intervals are used, otherwise Sison-Glaz.\n:sison_glaz: Sison-Glaz intervals\n:bootstrap: Bootstrap intervals\n:quesenberry_hurst: Quesenberry-Hurst intervals\n:gold: Gold intervals (asymptotic simultaneous intervals)\n\nReferences\n\nAgresti, Alan. Categorical Data Analysis, 3rd Edition. Wiley, 2013.\nSison, C.P and Glaz, J. Simultaneous confidence intervals and sample size determination for multinomial proportions. Journal of the American Statistical Association, 90:366-369, 1995.\nQuesensberry, C.P. and Hurst, D.C. Large Sample Simultaneous Confidence Intervals for Multinational Proportions. Technometrics, 6:191-195, 1964.\nGold, R. Z. Tests Auxiliary to χ^2 Tests in a Markov Chain. Annals of Mathematical Statistics, 30:56-74, 1963.\n\n\n\n\n\n","category":"function"},{"location":"methods/#p-value","page":"Methods","title":"p-value","text":"","category":"section"},{"location":"methods/","page":"Methods","title":"Methods","text":"pvalue","category":"page"},{"location":"methods/#StatsAPI.pvalue","page":"Methods","title":"StatsAPI.pvalue","text":"pvalue(x::FisherExactTest; tail = :both, method = :central)\n\nCompute the p-value for a given Fisher exact test.\n\nThe one-sided p-values are based on Fisher's non-central hypergeometric distribution f_ω(i) with odds ratio ω:\n\n    beginalign*\n        p_ω^(textleft) =sum_i  a f_ω(i)\n        p_ω^(textright) =sum_i  a f_ω(i)\n    endalign*\n\nFor tail = :both, possible values for method are:\n\n:central (default): Central interval, i.e. the p-value is two times the minimum of the one-sided p-values.\n:minlike: Minimum likelihood interval, i.e. the p-value is computed by summing all tables with the same marginals that are equally or less probable:\n    p_ω = sum_f_ω(i) f_ω(a) f_ω(i)\n\nReferences\n\nGibbons, J.D., Pratt, J.W., P-values: Interpretation and Methodology, American Statistican, 29(1):20-25, 1975.\nFay, M.P., Supplementary material to \"Confidence intervals that match Fisher’s exact or Blaker’s exact tests\". Biostatistics, Volume 11, Issue 2, 1 April 2010, Pages 373–374, link\n\n\n\n\n\n","category":"function"},{"location":"#HypothesisTests-package","page":"HypothesisTests package","title":"HypothesisTests package","text":"","category":"section"},{"location":"","page":"HypothesisTests package","title":"HypothesisTests package","text":"This package implements several hypothesis tests in Julia.","category":"page"},{"location":"","page":"HypothesisTests package","title":"HypothesisTests package","text":"Pages = [\"methods.md\", \"parametric.md\", \"nonparametric.md\", \"time_series.md\", \"multivariate.md\"]\nDepth = 2","category":"page"},{"location":"multivariate/#Multivariate-tests","page":"Multivariate tests","title":"Multivariate tests","text":"","category":"section"},{"location":"multivariate/#Hotelling's-T2-test","page":"Multivariate tests","title":"Hotelling's T^2 test","text":"","category":"section"},{"location":"multivariate/","page":"Multivariate tests","title":"Multivariate tests","text":"OneSampleHotellingT2Test\nEqualCovHotellingT2Test\nUnequalCovHotellingT2Test","category":"page"},{"location":"multivariate/#HypothesisTests.OneSampleHotellingT2Test","page":"Multivariate tests","title":"HypothesisTests.OneSampleHotellingT2Test","text":"OneSampleHotellingT2Test(X::AbstractMatrix, μ₀=<zero vector>)\n\nPerform a one sample Hotelling's T^2 test of the hypothesis that the vector of column means of X is equal to μ₀.\n\n\n\n\n\nOneSampleHotellingT2Test(X::AbstractMatrix, Y::AbstractMatrix, μ₀=<zero vector>)\n\nPerform a paired Hotelling's T^2 test of the hypothesis that the vector of mean column differences between X and Y is equal to μ₀.\n\n\n\n\n\n","category":"type"},{"location":"multivariate/#HypothesisTests.EqualCovHotellingT2Test","page":"Multivariate tests","title":"HypothesisTests.EqualCovHotellingT2Test","text":"EqualCovHotellingT2Test(X::AbstractMatrix, Y::AbstractMatrix)\n\nPerform a two sample Hotelling's T^2 test of the hypothesis that the difference in the mean vectors of X and Y is zero, assuming that X and Y have equal covariance matrices.\n\n\n\n\n\n","category":"type"},{"location":"multivariate/#HypothesisTests.UnequalCovHotellingT2Test","page":"Multivariate tests","title":"HypothesisTests.UnequalCovHotellingT2Test","text":"UnequalCovHotellingT2Test(X::AbstractMatrix, Y::AbstractMatrix)\n\nPerform a two sample Hotelling's T^2 test of the hypothesis that the difference in the mean vectors of X and Y is zero, without assuming that X and Y have equal covariance matrices.\n\n\n\n\n\n","category":"type"},{"location":"multivariate/#Equality-of-covariance-matrices","page":"Multivariate tests","title":"Equality of covariance matrices","text":"","category":"section"},{"location":"multivariate/","page":"Multivariate tests","title":"Multivariate tests","text":"Bartlett's test for equality of two covariance matrices is provided. This is equivalent to Box's M-test for two groups.","category":"page"},{"location":"multivariate/","page":"Multivariate tests","title":"Multivariate tests","text":"BartlettTest","category":"page"},{"location":"multivariate/#HypothesisTests.BartlettTest","page":"Multivariate tests","title":"HypothesisTests.BartlettTest","text":"BartlettTest(X::AbstractMatrix, Y::AbstractMatrix)\n\nPerform Bartlett's test of the hypothesis that the covariance matrices of X and Y are equal.\n\nnote: Note\nBartlett's test is sensitive to departures from multivariate normality.\n\n\n\n\n\n","category":"type"},{"location":"multivariate/#Correlation-and-partial-correlation-test","page":"Multivariate tests","title":"Correlation and partial correlation test","text":"","category":"section"},{"location":"multivariate/","page":"Multivariate tests","title":"Multivariate tests","text":"CorrelationTest","category":"page"},{"location":"multivariate/#HypothesisTests.CorrelationTest","page":"Multivariate tests","title":"HypothesisTests.CorrelationTest","text":"CorrelationTest(x, y)\n\nPerform a t-test for the hypothesis that textCor(xy) = 0, i.e. the correlation  of vectors x and y is zero.\n\nCorrelationTest(x, y, Z)\n\nPerform a t-test for the hypothesis that textCor(xyZ=z) = 0, i.e. the partial correlation of vectors x and y given the matrix Z is zero.\n\nImplements pvalue for the t-test. Implements confint using an approximate confidence interval based on Fisher's z-transform.\n\nSee also partialcor from StatsBase.\n\nExternal resources\n\nPartial correlation on Wikipedia (for the construction of the confidence interval)\nSection testing using Student's t-distribution from Pearson correlation coefficient on Wikipedia\nK.J. Levy and S.C. Narula (1978): Testing Hypotheses concerning Partial Correlations: Some Methods and Discussion. International Statistical Review 46(2).\n\n\n\n\n\n","category":"type"}]
}
